name: CD

# define when this workflow is triggered
on:
  workflow_dispatch:
  push:
    branches:
      - main

# cancel any currently running workflows in this same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # determine appropriate version number, update changelog, and create a release commit
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: semantic-release
    permissions:
      id-token: write
      contents: write
    steps:
      # checkout the repo and supply a PAT for the changelog update commit.
      - id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{secrets.PAT}}

      # use semantic-release
      - id: semantic-release-job
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # Upload to Test PyPI on every commit on main.
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    runs-on: ubuntu-latest
    needs: [semantic-release]
    environment:
      name: testpypi
      url: https://pypi.org/p/invert4geom
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    if:
      github.ref == 'refs/heads/main' && needs.semantic-release.released ==
      'true'
    steps:
      - name: Upload package to Test PyPI
        with:
          repository-url: https://test.pypi.org/legacy/
        uses: pypa/gh-action-pypi-publish@release/v1

  # Upload to real PyPI on GitHub Releases.
  release-pypi:
    name: Publish released package to pypi.org
    runs-on: ubuntu-latest
    needs: [semantic-release]
    environment:
      name: pypi
      url: https://pypi.org/p/invert4geom
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    if:
      github.ref == 'refs/heads/main' && needs.semantic-release.released ==
      'true'
    steps:
      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  # Upload to GitHub Releases.
  release-github:
    name: Publish package distributions to GitHub Releases
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    if:
      github.ref == 'refs/heads/main' && needs.semantic-release.released ==
      'true'
    needs: [semantic-release]
    steps:
      - uses: python-semantic-release/upload-to-gh-release@main
        with:
          github_token: ${{ secrets.PAT }}
